name: git-commit-helper

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build git-commit-helper
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux_x86_64
            target: x86_64-unknown-linux-gnu
            os: self-hosted
            command: sudo apt update && sudo apt-get install libssl-dev pkg-config -y
            file: git-commit-helper
          - build: macos_x86_64
            target: x86_64-apple-darwin
            os: macos-latest
            command: brew install openssl@3
            file: git-commit-helper
          - build: macos_arm64
            target: aarch64-apple-darwin
            os: macos-latest
            command: brew install openssl@3
            file: git-commit-helper
          - build: windows_x86_64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            command: choco install openssl
            file: git-commit-helper.exe
    steps:
    - uses: actions/checkout@v4
    - name: Install Requirements
      run:  ${{ matrix.command }}
        
    # - name: Test
    #   run: cargo test --verbose
    - name: Set OpenSSL env (for macOS x86 only)
      if: matrix.target == 'x86_64-apple-darwin'
      run: |
        export OPENSSL_PREFIX=$(brew --prefix openssl@3)
        echo "OPENSSL_DIR=$OPENSSL_PREFIX" >> $GITHUB_ENV
        echo "OPENSSL_INCLUDE_DIR=$OPENSSL_PREFIX/include" >> $GITHUB_ENV
        echo "OPENSSL_LIB_DIR=$OPENSSL_PREFIX/lib" >> $GITHUB_ENV
        echo "OPENSSL_STATIC=1" >> $GITHUB_ENV

    - name: Add Nasm
      if: startsWith(matrix.os, 'windows')
      uses: ilammy/setup-nasm@v1
    - name: Add Target
      run: rustup target add ${{matrix.target}}  


    - name: Build
      run: cargo build --release  --target ${{matrix.target}} --verbose
    # - name: List Files
    #   run: ls -al target/release

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        file: target/${{matrix.target}}/release/${{matrix.file}}
        body: "Release of git-commit-helper "
        token: ${{ secrets.ACCESS_TOKEN}}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN}}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{matrix.target}}/release/${{matrix.file}}
        asset_name: git-commit-helper-${{matrix.target}}
        asset_content_type: application/octet-stream
